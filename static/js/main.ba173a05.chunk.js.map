{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","Component","App","onSearchChange","event","setState","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,mCACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACpB,gCACA,6BAAKF,IACL,4BAAIC,aCcMK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACE,mCAEEA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIEC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGAI,EAVA,SAACC,GACf,OACE,mCACC,qBAAKC,MAAS,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAxE,SACEJ,EAAMK,cCiBGC,G,wDApBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,8DAODC,EAAOC,GACxBC,KAAKJ,MAAM,CAACC,UAAU,M,+BAMtB,OAFqBG,KAAKJ,MAAlBC,SAGR,0DACAG,KAAKX,MAAMK,a,GAjBcO,cCmDZC,E,kDA7Cd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKZ,MAAQ,CACZjB,OAAQ,GACR2B,YAAa,IALD,E,gEASO,IAAD,OACnBG,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAC1B,OAAQkC,S,+BAM9B,IAAD,EAEsBb,KAAKJ,MAA5BjB,EAFC,EAEDA,OAAQ2B,EAFP,EAEOA,YAETQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAItD,OAAQtC,EAAOwC,OAGb,mCACC,sBAAK5C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKG,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUxB,OAAQmC,aARtB,6C,GA7Beb,aCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ba173a05.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\n\nconst Card = ({name, email, id}) => {\n\treturn(\n\t\t<>\n\t\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n\t\t\t\t\t<div>\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<p>{email}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t\t);\n}\n\nexport default Card;","import React, {Fragment} from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\t\n\treturn(\n\t\t\t<>\n\t\t\t\t{\n\t\t\t\t\trobots.map((user,i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</>\n\t\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n\treturn (\n\t\t\t<div className='pa2'>\n\t\t\t\t<input \n\t\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\t\t\ttype='search' \n\t\t\t\t\tplaceholder='search robots' \n\t\t\t\t\tonChange={searchChange} \n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React, {Fragment} from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t\t<>\n\t\t\t\t<div style = {{ overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\n\t\t\t\t\t{props.children}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.state({hasError: true})\n\t}\n\n\trender() {\n\t\tconst { hasError } = this.state;\n\n\t\treturn hasError ? \n\t\t<h1>Sorry, there's an error!</h1> :\n\t\tthis.props.children\n\t}\n}\n\nexport default ErrorBoundry;","import React, {Component, Fragment} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css'\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\t// contains the properties that can be changed\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: '',\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({robots: users}));\n\t}\n\t// this function listens for events on the searchfield\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value});\n\t}\n\trender() {\n\n\t\tconst {robots, searchfield} = this.state\n\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\n\t\t})\n\t\t\n\t\t// if robots lengt is === 0 return loading else, return components\n\t\treturn !robots.length ? \n\t\t\t<h1>Loading</h1> :\n\t\t\t(\n\t\t\t\t<>\t\n\t\t\t\t\t<div className=\"tc\">\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t\t</Scroll>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t\t<App />\n   </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}